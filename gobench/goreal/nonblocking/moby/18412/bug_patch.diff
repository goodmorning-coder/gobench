diff --git a/pkg/integration/utils.go b/pkg/integration/utils.go
index 330a533904..6fe1c0afe6 100644
--- a/pkg/integration/utils.go
+++ b/pkg/integration/utils.go
@@ -104,25 +104,19 @@ func RunCommandWithOutputForDuration(cmd *exec.Cmd, duration time.Duration) (out
 	}
 	cmd.Stderr = &outputBuffer
 
+	done := make(chan error)
+
 	// Start the command in the main thread..
 	err = cmd.Start()
 	if err != nil {
 		err = fmt.Errorf("Fail to start command %v : %v", cmd, err)
 	}
 
-	type exitInfo struct {
-		exitErr  error
-		exitCode int
-	}
-
-	done := make(chan exitInfo, 1)
-
 	go func() {
 		// And wait for it to exit in the goroutine :)
-		info := exitInfo{}
-		info.exitErr = cmd.Wait()
-		info.exitCode = ProcessExitCode(info.exitErr)
-		done <- info
+		exitErr := cmd.Wait()
+		exitCode = ProcessExitCode(exitErr)
+		done <- exitErr
 	}()
 
 	select {
@@ -132,9 +126,9 @@ func RunCommandWithOutputForDuration(cmd *exec.Cmd, duration time.Duration) (out
 			fmt.Printf("failed to kill (pid=%d): %v\n", cmd.Process.Pid, killErr)
 		}
 		timedOut = true
-	case info := <-done:
-		err = info.exitErr
-		exitCode = info.exitCode
+		break
+	case err = <-done:
+		break
 	}
 	output = outputBuffer.String()
 	return
