diff --git a/pkg/reconciler/reconciler.go b/pkg/reconciler/reconciler.go
index 9ab2268ed..177ce6248 100644
--- a/pkg/reconciler/reconciler.go
+++ b/pkg/reconciler/reconciler.go
@@ -21,7 +21,6 @@ import (
 
 	"go.uber.org/zap"
 	corev1 "k8s.io/api/core/v1"
-	"k8s.io/apimachinery/pkg/watch"
 	"k8s.io/client-go/dynamic"
 	"k8s.io/client-go/kubernetes"
 	"k8s.io/client-go/kubernetes/scheme"
@@ -109,19 +108,10 @@ func NewBase(opt Options, controllerAgentName string) *Base {
 		// Create event broadcaster
 		logger.Debug("Creating event broadcaster")
 		eventBroadcaster := record.NewBroadcaster()
-		watches := []watch.Interface{
-			eventBroadcaster.StartLogging(logger.Named("event-broadcaster").Infof),
-			eventBroadcaster.StartRecordingToSink(
-				&typedcorev1.EventSinkImpl{Interface: opt.KubeClientSet.CoreV1().Events("")}),
-		}
+		eventBroadcaster.StartLogging(logger.Named("event-broadcaster").Infof)
+		eventBroadcaster.StartRecordingToSink(&typedcorev1.EventSinkImpl{Interface: opt.KubeClientSet.CoreV1().Events("")})
 		recorder = eventBroadcaster.NewRecorder(
 			scheme.Scheme, corev1.EventSource{Component: controllerAgentName})
-		go func() {
-			<-opt.StopChannel
-			for _, w := range watches {
-				w.Stop()
-			}
-		}()
 	}
 
 	statsReporter := opt.StatsReporter
@@ -130,7 +120,7 @@ func NewBase(opt Options, controllerAgentName string) *Base {
 		var err error
 		statsReporter, err = NewStatsReporter(controllerAgentName)
 		if err != nil {
-			logger.Fatal(err)
+			panic(err)
 		}
 	}
 
diff --git a/pkg/reconciler/reconciler_test.go b/pkg/reconciler/reconciler_test.go
index 29fd97864..3adc4e076 100644
--- a/pkg/reconciler/reconciler_test.go
+++ b/pkg/reconciler/reconciler_test.go
@@ -33,15 +33,12 @@ func TestNew(t *testing.T) {
 	kubeClient := fakekubeclientset.NewSimpleClientset()
 	sharedClient := fakesharedclientset.NewSimpleClientset()
 	servingClient := fakeclientset.NewSimpleClientset()
-	sc := make(chan struct{})
-	defer close(sc)
 
 	r := NewBase(Options{
 		KubeClientSet:    kubeClient,
 		SharedClientSet:  sharedClient,
 		ServingClientSet: servingClient,
 		Logger:           logtesting.TestLogger(t),
-		StopChannel:      sc,
 	}, reconcilerName)
 
 	if r == nil {
diff --git a/pkg/reconciler/v1alpha1/route/route_test.go b/pkg/reconciler/v1alpha1/route/route_test.go
index 5af4ec191..9e94fa830 100644
--- a/pkg/reconciler/v1alpha1/route/route_test.go
+++ b/pkg/reconciler/v1alpha1/route/route_test.go
@@ -923,6 +923,7 @@ func TestGlobalResyncOnUpdateDomainConfigMap(t *testing.T) {
 					t.Errorf("Wait() = %v", err)
 				}
 			}()
+
 			h := NewHooks()
 
 			// Check for ClusterIngress created as a signal that syncHandler ran
